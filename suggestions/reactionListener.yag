{{/*
	This is the supportive reaction listener for the suggestion command by 2x2Master.
    Please make sure to restrict this custom command to the suggestions channel so it doesn't trigger in other channels!

	Trigger type: Reaction (added and removed reactions)
	Errors as Custom Command Outputs: off

	Credits: 2x2Master1 <https://github.com/2x2master1>
	Feel free to ping me in YAGPDB support or DM me if you have any questions or problems!
*/}}

{{if or (eq .Reaction.Emoji.Name "ðŸŸ¢") (eq .Reaction.Emoji.Name "ðŸ”´")}}
    {{$c1 := 0}}
    {{$message := .ReactionMessage}}
    {{$name1 := "ðŸŸ¢"}}
    {{range $message.Reactions}}
        {{if eq .Emoji.Name $name1}}
            {{$c1 = sub .Count 1}}
        {{end}}
    {{end}}
    {{$c2 := 0}}
    {{$message := .ReactionMessage}}
    {{$name2 := "ðŸ”´"}}
    {{range $message.Reactions}}
        {{if eq .Emoji.Name $name2}}
            {{$c2 = sub .Count 1}}
        {{end}}
    {{end}}
    {{$yes1 := false}}
        {{if not (and (eq $c1 0) (eq $c2 0))}}
        {{$yes1 = (toInt (mult (toFloat (div (toFloat $c1) (toFloat (add $c1 $c2)))) 100.0))}}
        {{else}}
        {{$yes1 = 0}}
        {{end}}
    {{$ed1 := ((index ((getMessage nil (.ReactionMessage.ID)).Embeds) 0).Description)}}
    {{$yes := reReplace `Upvotes\: \d+ \(\d+\%\)` $ed (print "Upvotes: " (toString $c1) " (" $yes1 "%)")}}
    {{$no1 := false}}
        {{if not (and (eq $c1 0) (eq $c2 0))}}
        {{$no1 = (toInt (mult (toFloat (div (toFloat $c2) (toFloat (add $c1 $c2)))) 100.0))}}
        {{else}}
        {{$no1 = 0}}
        {{end}}
    {{$ed2 := ((index ((getMessage nil (.ReactionMessage.ID)).Embeds) 0).Description)}}
    {{$no := reReplace `Downvotes\: \d+ \(\d+\%\)` $ed (print "Downvotes: " (toString $c2) " (" $no1 "%)")}}
    {{editMessage nil .ReactionMessage.ID (complexMessageEdit "content" .ReactionMessage.Content "embed" (cembed "title" ((index ((getMessage nil (.ReactionMessage.ID)).Embeds) 0).Title) "description" $no "color" 0x00bbff))}}
    {{editMessage nil .ReactionMessage.ID (complexMessageEdit "content" .ReactionMessage.Content "embed" (cembed "title" ((index ((getMessage nil (.ReactionMessage.ID)).Embeds) 0).Title) "description" $yes "color" 0x00bbff))}}
{{end}}
